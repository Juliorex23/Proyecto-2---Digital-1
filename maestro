#include <Adafruit_LiquidCrystal.h>
Adafruit_LiquidCrystal lcd(0);
  int BPMvalue = 0;
  int SVvalue = 0;
  int PSvalue = 0;
  int PDvalue = 0;
  const long interval = 2000;  // interval at which to blink (milliseconds)
  unsigned long previousMillis = 0;
  
  typedef enum estados {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9} estados;
  estados estadoActual = s0;
  estados estadoFuturo = s0;
void setup() {
  lcd.begin(16, 2);
  pinMode(13, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(9, OUTPUT);
}
void loop() { //Aquí comienzan las transiciones de estado
  int CO = (BPMvalue)*(SVvalue);
  int Pp = (PSvalue) - (PDvalue);
  int Pm = (PDvalue) + ((Pp)/3);
  
  
  switch (estadoActual) {
    case s0:
      //Se muestra el mensaje en la LCD para indicar qué variable se está midiendo
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Leyendo pulso: ");
      delay(3000); //delay de 3000 ms
      BPMvalue = analogRead(A0); //Aquí se lee el input del sensor de BPM
      BPMvalue = map(BPMvalue, 0, 1023, 80, 260);
      lcd.clear();
      lcd.setCursor (0, 0);
      lcd.print("Pulso Registrado");
      lcd.setCursor (0, 1);
      lcd.print(BPMvalue);
      delay(3000);
      lcd.clear();
      if(BPMvalue >= 220){
          estadoFuturo = s2;
      }else{
        estadoFuturo = s1;
      }
      break;

    case s1:
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su BPM es bueno:");
      lcd.setCursor(1,1);
      lcd.print(BPMvalue);
      delay(3000);
      lcd.clear();
       break;

    case s2:
      estadoFuturo = s0;
   
      break;      
    case s3:
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su Stroke Vol.");
      lcd.setCursor(1,1);
      lcd.print("es bueno:");
      lcd.setCursor(12,1);
      lcd.print(SVvalue);
      delay(3000);
      lcd.clear();
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(11, LOW);
      digitalWrite(10, LOW);
      //Salida para activar el motor Servo que dará una bandera verde para indicar bienestar en la medición
      digitalWrite(9,HIGH);
      delay (3000);
      digitalWrite(9,LOW);
       
       break;
    
      case s4:
        estadoFuturo = s0;
        break;
    
    
      case s5:
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su Presion S.");
      lcd.setCursor(1,1);
      lcd.print("es buena:");
      lcd.setCursor(12,1);
      lcd.print(PSvalue);
      delay(3000);
      lcd.clear();
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(11, LOW);
      digitalWrite(10, LOW);
      //Salida para activar el motor Servo que dará una bandera verde para indicar bienestar en la medición
      digitalWrite(9,HIGH);
      delay (3000);
      digitalWrite(9,LOW);
      break;
    
    
      case s6:
       estadoFuturo = s0;
       break;
    
    
      case s7:
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su Presion D.");
      lcd.setCursor(1,1);
      lcd.print("es buena:");
      lcd.setCursor(12,1);
      lcd.print(PDvalue);
      delay(3000);
      lcd.clear();
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(11, LOW);
      digitalWrite(10, LOW);
      //Salida para activar el motor Servo que dará una bandera verde para indicar bienestar en la medición
      digitalWrite(9,HIGH);
      delay (3000);
      digitalWrite(9,LOW);
      estadoFuturo = s0;
      break;
    
    
      case s8:
        estadoFuturo = s0;
        break;
        }
 
  
  
  
  switch (estadoActual){
    case s0:
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(11, LOW);
      digitalWrite(10, LOW);
      break;
    case s1:
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(11, LOW);
      digitalWrite(10, LOW);
      //Salida para activar el motor Servo que dará una bandera verde para indicar bienestar en la medición
      digitalWrite(9,HIGH);
      delay (3000);
      digitalWrite(9,LOW);
      //buzzer pos feedback  //lcd pos feedback
    //Se muestra el mensaje en la LCD para indicar qué variable se está midiendo
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Leyendo Stroke ");
      lcd.setCursor (0 ,1);
      lcd.print("Volume: ");
      delay(3000); //delay de 3000 ms
      SVvalue = analogRead(A1); //Aquí se lee el input del sensor de Stroke Volume
      SVvalue = map(SVvalue, 0, 1023, 40, 100);
      lcd.clear();
      lcd.setCursor (0, 0);
      lcd.print("SV Registrado");
      lcd.setCursor (0, 1);
      lcd.print(SVvalue);
      delay(5000);
      if(SVvalue >= 60){
        estadoFuturo = s3;
      } else {
        estadoFuturo = s4;
      }
      break;

    
    case s2:
      digitalWrite(13, HIGH); 
      digitalWrite(12, LOW);
      digitalWrite(11, LOW);
      digitalWrite(10, LOW);
      delay(3000);
      digitalWrite(13, LOW);
    
      lcd.setCursor(1,0);
      lcd.print("Su BPM es alto:");
      lcd.setCursor(1,1);
      lcd.print(BPMvalue);
      delay(3000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Posibles");
      lcd.setCursor(1,1);
      lcd.print("patologias:");
      delay(1500);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Anemia,");
      delay(1500);
      lcd.setCursor(1,1);
      lcd.print("Hipertension,");
      delay(1500);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Enfermedad");
      lcd.setCursor(1,1);
      lcd.print("Coronaria");
      delay(1500);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Buscar atencion");
      lcd.setCursor(1,1);
      lcd.print("medica");
      delay(1500);
      lcd.clear();
    break;
    
    
    case s3:

      //Se muestra el mensaje en la LCD para indicar qué variable se está midiendo
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Leyendo Presion ");
      lcd.setCursor (0 ,1);
      lcd.print("Sistolica: ");
      delay(3000); //delay de 3000 ms
      PSvalue = analogRead(A2); //Aquí se lee el input del sensor de Presión sistólica
      PSvalue = map(PSvalue, 0, 1023, 90, 130);
      lcd.clear();
      lcd.setCursor (0, 0);
      lcd.print("PS Registrada");
      lcd.setCursor (0, 1);
      lcd.print(PSvalue);
      delay(5000);
      if (PSvalue >= 100){
        estadoFuturo = s5;
      }  
      else {
        estadoFuturo = s6;
      }
    
      break;
    case s4:
      digitalWrite(13, LOW);
      digitalWrite(12, HIGH);
      digitalWrite(11, LOW);
      digitalWrite(10, LOW);
      delay(3000);
      digitalWrite(12,LOW);
    
    //Posibles diagnósticos 
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su Stroke Vol.");
      lcd.setCursor(1,1);
      lcd.print("es bajo:");
      delay(2500);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print(SVvalue);
      lcd.setCursor(1,1);
      lcd.print("mL/min");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Posibles");
      lcd.setCursor(1,1);
      lcd.print("patologias:");
      delay(1500);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Insuficiencia");
      lcd.setCursor(1,1);
      lcd.print("Cardiaca");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Cardiomiopatia");
      lcd.setCursor(1,1);
      lcd.print("Arritmia");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Se recomienda");
      lcd.setCursor(1,1);
      lcd.print("buscar atencion");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("y tratamiento");
      lcd.setCursor(1,1);
      lcd.print("medico");
      delay(2000);
      lcd.clear();
      break;
    
    
    case s5:
      
    //Se muestra el mensaje en la LCD para indicar qué variable se está midiendo
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Leyendo Presion ");
      lcd.setCursor (0 ,1);
      lcd.print("Diastolica: ");
      delay(3000); //delay de 3000 ms
      PDvalue = analogRead(A3);//Aquí se lee el input del sensor de Presión diastólica
      PDvalue = map(PDvalue, 0, 1023, 60, 90);
      lcd.clear();
      lcd.setCursor (0, 0);
      lcd.print("PD Registrada");
      lcd.setCursor (0, 1);
      lcd.print(PSvalue);
      delay(5000);
      if (PDvalue >= 80){
        estadoFuturo = s7;
      } else{
        estadoFuturo = s8;
      }
      break;
    
    case s6:
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(11, HIGH);
      digitalWrite(10, LOW);
      delay(3000);
      digitalWrite(11,LOW);
    
      
    //Posibles patologías 
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Su Presion Sis-");
      lcd.setCursor(0,1);
      lcd.print("tolica es baja");
      delay(2500);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print(PSvalue);
      delay(1500);
      lcd.setCursor(0,0);
      lcd.print("Posibles");
      lcd.setCursor(0,1);
      lcd.print("Patologias:");
      delay(3000);
      lcd.setCursor(0,0);
      lcd.print("Hipotiroidismo,");
      lcd.setCursor(0,1);
      lcd.print("Hipotension,");
      delay(2000);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Insuficiencia");
      lcd.setCursor(0,1);
      lcd.print("Cardiaca");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Buscar atencion");
      lcd.setCursor(1,1);
      lcd.print("medica");
      delay(1500);
      lcd.clear();
      break;
   
    case s7:
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su cardiac");
      lcd.setCursor(1,1);
      lcd.print("output es de:");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print(CO);
      lcd.setCursor(1,1);
      lcd.print("mL/min");
      delay(3000);
      lcd.clear();
      delay(1000);
    
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su presion de");
      lcd.setCursor(1,1);
      lcd.print("pulso es de:");
      delay(3000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print(Pp);
      lcd.setCursor(1,1);
      lcd.print("mmHg");
      delay(3000);
      lcd.clear();
      
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Su presion");
      lcd.setCursor(1,1);
      lcd.print("media es de:");
      delay(3000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print(Pm);
      lcd.setCursor(1,1);
      lcd.print("mmHg");
      delay(3000);
      lcd.clear();    
    
    break;
    
    case s8:
      digitalWrite(13, LOW);
      digitalWrite(12, LOW);
      digitalWrite(11, LOW);
      digitalWrite(10, HIGH);
      delay(3000);
      digitalWrite(10,LOW);
    
    
      lcd.clear();
   	  lcd.setCursor(1,0);
      lcd.print("Su Presion Dias-");
      lcd.setCursor(1,1);
      lcd.print("tolica es baja");
      delay(2500);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print(PDvalue);
      delay(1500);
      lcd.setCursor(1,1);
      lcd.print("Posibles");
      lcd.setCursor(1,0);
      lcd.print("Patologias:");
      delay(3000);
      lcd.setCursor(1,1);
      lcd.print("Hipotiroidismo,");
      lcd.setCursor(0,1);
      lcd.print("Hipotension,");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Insuficiencia");
      lcd.setCursor(1,1);
      lcd.print("Cardiaca");
      delay(2000);
      lcd.clear();
      lcd.setCursor(1,0);
      lcd.print("Buscar atencion");
      lcd.setCursor(1,1);
      lcd.print("medica");
      delay(1500);
      lcd.clear();
      break;
  }
  unsigned long currentMillis = millis();
if (currentMillis - previousMillis >=
interval) {
estadoActual = estadoFuturo;
previousMillis = currentMillis;
}
}
