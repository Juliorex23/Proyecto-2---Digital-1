#include <Servo.h>


Servo servo;

// Definición de la secuencia de movimientos
int secuencia[] = {45, 135, 45, 135, 45, 135, 45, 135 };


  const long interval = 2000;  // interval at which to blink (milliseconds)
  unsigned long previousMillis = 0;
  
  typedef enum estados {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9} estados;
  estados estadoActual = s0;
  estados estadoFuturo = s0;


void setup() {
  servo.attach(2);
  pinMode(13, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(9, OUTPUT);
}

void loop() { //Aquí comienzan las transiciones de estado

        if (digitalRead(13) == HIGH) 
        {
        digitalWrite(8,HIGH);
        delay(2000);
        digitalWrite(8,LOW);
        for (int i = 0; i <= 7; i++) {
        int angulo = secuencia[i];
        servo.write(angulo);
        delay(1000); // Espera 1 segundo antes de pasar al siguiente movimiento
        }
        }

        else if (digitalRead(12)==HIGH)
        {
        digitalWrite (7,HIGH);
        delay(2000);
        digitalWrite(7,LOW);
        for (int i = 0; i <= 7; i++) {
        int angulo = secuencia[i];
        servo.write(angulo);
        delay(1000); // Espera 1 segundo antes de pasar al siguiente movimiento
        }
        }
        else if (digitalRead(11)==HIGH)
        {
        digitalWrite(6,HIGH);
        delay(2000);
        digitalWrite(6,LOW);
        for (int i = 0; i <= 7; i++) {
        int angulo = secuencia[i];
        servo.write(angulo);
        delay(1000); // Espera 1 segundo antes de pasar al siguiente movimiento
        }
        }
        else if (digitalRead(10)==HIGH)
        {
        digitalWrite(5,HIGH);
        delay(2000);
        digitalWrite(5,LOW);
        for (int i = 0; i <= 7; i++) {
        int angulo = secuencia[i];
        servo.write(angulo);
        delay(1000); // Espera 1 segundo antes de pasar al siguiente movimiento
        }
        }
  unsigned long currentMillis = millis();
if (currentMillis - previousMillis >=
interval) {
estadoActual = estadoFuturo;
previousMillis = currentMillis;
}
}
